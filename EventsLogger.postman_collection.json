{
	"info": {
		"_postman_id": "f8f02647-d418-402f-b746-7793022af1f8",
		"name": "EventsLogger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29771180"
	},
	"item": [
		{
			"name": "Entry",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});var template = `",
									"<style type=\"text/css\">",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
									"    .tftable tr {background-color:#ffffff;}",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
									"    .tftable tr:hover {background-color:#e0ffff;}",
									"</style>",
									"",
									"<table class=\"tftable\" border=\"1\">",
									"    <tr>",
									"        <th>ID</th>",
									"        <th>Created Date</th>",
									"        <th>Description</th>",
									"        <th>User ID</th>",
									"        <th>User Name</th>",
									"        <th>User Email</th>",
									"        <th>Project ID</th>",
									"        <th>Project Name</th>",
									"    </tr>",
									"    ",
									"    {{#each response.result}}",
									"        <tr>",
									"            <td>{{id}}</td>",
									"            <td>{{createdDate}}</td>",
									"            <td>{{description}}</td>",
									"            <td>{{userDTO.id}}</td>",
									"            <td>{{userDTO.userName}}</td>",
									"            <td>{{userDTO.email}}</td>",
									"            <td>{{projectDTO.id}}</td>",
									"            <td>{{projectDTO.name}}</td>",
									"        </tr>",
									"    {{/each}}",
									"</table>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return { response: pm.response.json() }",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/Entry",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Entry"
							],
							"query": [
								{
									"key": "projectid",
									"value": "fcd4ce51-ec33-4021-b6ed-bccafd50ed2e",
									"description": "optional",
									"disabled": true
								},
								{
									"key": "userid",
									"value": "6bff690f-830b-45fa-b85d-0e8385cb0f1e",
									"description": "optional",
									"disabled": true
								},
								{
									"key": "hasfiles",
									"value": "True",
									"description": "optional",
									"disabled": true
								},
								{
									"key": "datestart",
									"value": "",
									"description": "TODO optional",
									"disabled": true
								},
								{
									"key": "dateend",
									"value": "",
									"description": "TODO optional",
									"disabled": true
								},
								{
									"key": "entrydescription",
									"value": null,
									"disabled": true
								},
								{
									"key": "projectname",
									"value": null,
									"disabled": true
								},
								{
									"key": "username",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Entry By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/Entry/22dba1ea-5d6b-477d-8e0d-e83b172324d3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Entry",
								"22dba1ea-5d6b-477d-8e0d-e83b172324d3"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "projectid",
									"value": "d8b9afa8-612b-497f-a03d-2dad32d0fdb1",
									"type": "text"
								},
								{
									"key": "Description",
									"value": "lorem ipsum",
									"type": "text"
								},
								{
									"key": "Files",
									"type": "file",
									"src": "/C:/Users/lucas/Downloads/unificado (3).pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/Entry/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Entry",
								""
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "projectid",
									"value": "d8b9afa8-612b-497f-a03d-2dad32d0fdb1",
									"type": "text"
								},
								{
									"key": "Description",
									"value": "lorem ipsum",
									"type": "text"
								},
								{
									"key": "Files",
									"type": "file",
									"src": "/C:/Users/lucas/Downloads/unificado (3).pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/Entry/22dba1ea-5d6b-477d-8e0d-e83b172324d3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Entry",
								"22dba1ea-5d6b-477d-8e0d-e83b172324d3"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/Entry/82862e8e-5967-44ac-91b7-9e52eca15a0b",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Entry",
								"82862e8e-5967-44ac-91b7-9e52eca15a0b"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}/api/User/all?UserName=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"User",
								"all"
							],
							"query": [
								{
									"key": "UserName",
									"value": ""
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update self",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "FirstName",
									"value": "",
									"description": "optional",
									"type": "text",
									"disabled": true
								},
								{
									"key": "LastName",
									"value": "",
									"description": "optional",
									"type": "text",
									"disabled": true
								},
								{
									"key": "Email",
									"value": "",
									"description": "optional",
									"type": "text",
									"disabled": true
								},
								{
									"key": "Password",
									"value": "",
									"description": "optional",
									"type": "text",
									"disabled": true
								},
								{
									"key": "NewPassword",
									"value": "",
									"description": "optional",
									"type": "text",
									"disabled": true
								},
								{
									"key": "File",
									"description": "optional",
									"type": "file",
									"src": "/C:/Users/lucas/Downloads/unificado (3).pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/User/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"User",
								""
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete Self",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"sadmokasdk!2A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/User",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"User"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "Get all projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/Project",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project"
							],
							"query": [
								{
									"key": "self",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Project By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/Project/2bb2084f-b89f-4d4a-b915-9b1ddeb8f62c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"2bb2084f-b89f-4d4a-b915-9b1ddeb8f62c"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Big House\",\n    \"address\": {\n        \"street\":\"Av. B P S, 1303\",\n        \"city\":\"Itajubá\",\n        \"state\":\"Minas Gerais\",\n        \"zipcode\":\"37500-903\",\n        \"country\":\"Brasil\"\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/Project",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/Project/e30d9a2a-e328-4c6b-afd0-e7296e3f52cf",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"e30d9a2a-e328-4c6b-afd0-e7296e3f52cf"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ProjectUser",
			"item": [
				{
					"name": "Create User to projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "projectId",
									"value": "2bb2084f-b89f-4d4a-b915-9b1ddeb8f62c",
									"type": "text"
								},
								{
									"key": "role",
									"value": "worker",
									"type": "text"
								},
								{
									"key": "firstname",
									"value": "joao",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "silva",
									"type": "text"
								},
								{
									"key": "email",
									"value": "joao_algumacoisa@email.com",
									"type": "text"
								},
								{
									"key": "username",
									"value": "joao__silva",
									"description": "optional",
									"type": "text",
									"disabled": true
								},
								{
									"key": "photo",
									"description": "optional",
									"type": "file",
									"src": [],
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/Project/User/Create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"User",
								"Create"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "AddUser to project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"projectId\": \"84ae317d-46ca-44b7-acd6-8bb70ee283d7\",\n    \"userId\": \"cd858ee7-d1f3-4878-81bc-f448e0656542\",\n    \"role\": \"worker\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/Project/User",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"User"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Remove use from project",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"projectid\":\"\",\r\n    \"userid\":\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/Project/User",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"User"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user from the site that are part of the project",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "projectid",
									"value": "2bb2084f-b89f-4d4a-b915-9b1ddeb8f62c",
									"type": "text"
								},
								{
									"key": "userid",
									"value": "764d29b3-596f-428f-814f-beda36ad229c",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/Project/User/Delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"User",
								"Delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": \"2bb2084f-b89f-4d4a-b915-9b1ddeb8f62c\",\r\n  \"userId\": \"491dff28-0d57-4881-a772-d7dba5a46563\",\r\n  \"firstName\": \"mateus\",\r\n  \"lastName\": \"ramos\",\r\n  \"email\": \"mateus_gmail@gmail.com\",\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/Project/User",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"User"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ProjectEntry",
			"item": [
				{
					"name": "Create Entry Project",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "UserId",
									"value": "491dff28-0d57-4881-a772-d7dba5a46563",
									"type": "text"
								},
								{
									"key": "ProjectId",
									"value": "2bb2084f-b89f-4d4a-b915-9b1ddeb8f62c",
									"type": "text"
								},
								{
									"key": "Description",
									"value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse feugiat interdum iaculis. Donec et metus elit. Mauris vestibulum rutrum venenatis. Cras pulvinar aliquet rutrum. Maecenas tristique lacus massa, non egestas ex auctor in. Proin cursus feugiat ultricies. In ornare elementum arcu ac consequat. Nulla vehicula porttitor magna, a bibendum magna aliquet quis.",
									"type": "text"
								},
								{
									"key": "Files",
									"type": "file",
									"src": "/C:/Users/lucas/Downloads/CCO_PPC.pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/Project/Entry",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"Entry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Entry Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}/api/Project/Entry/ba83f4d2-2a24-402d-b20e-5fb36ab58cfd",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"Entry",
								"ba83f4d2-2a24-402d-b20e-5fb36ab58cfd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Entry Project",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Description",
									"value": "ajsndoasndLorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus lobortis. ",
									"type": "text"
								},
								{
									"key": "Files",
									"type": "file",
									"src": "/C:/Users/lucas/Downloads/unificado (3).pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/Project/Entry/22dba1ea-5d6b-477d-8e0d-e83b172324d3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Project",
								"Entry",
								"22dba1ea-5d6b-477d-8e0d-e83b172324d3"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData =  pm.response.json();\r",
									"pm.environment.set(\"token\", jsonData.result.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Lucasaaa_oliver\",\r\n    \"firstname\": \"asdasadas\",\r\n    \"lastname\": \"asokdokas\",\r\n    \"email\": \"Lucaaaas_oliver@email.com\",\r\n    \"password\": \"sadmokasdk!2A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/Auth/Register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Auth",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData =  pm.response.json();\r",
									"pm.environment.set(\"token\", jsonData.result.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Lucas_oliver@email.com\",\r\n    \"password\": \"sadmokasdk!2A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/Auth/Login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"Auth",
								"Login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get User Public",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/joao_algumacoisa@email.com",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"joao_algumacoisa@email.com"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5275",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}